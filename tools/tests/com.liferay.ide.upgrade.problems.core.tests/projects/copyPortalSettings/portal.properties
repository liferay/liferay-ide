##
## Properties Override
##

##
## Staging
##

    #
    # Set this property to false to avoid deleting the temporary LAR during a
    # a failed staging publication process. In remote staging contexts, this
    # only applies for the staging environment.
    #
    # Env: LIFERAY_STAGING_PERIOD_DELETE_PERIOD_TEMP_PERIOD_LAR_PERIOD_ON_PERIOD_FAILURE
    #
    staging.delete.temp.lar.on.failure=true

    #
    # Set this property to false to avoid deleting the temporary LAR during a
    # a successful staging publication process. In remote staging contexts, this
    # only applies for the staging environment.
    #
    # Env: LIFERAY_STAGING_PERIOD_DELETE_PERIOD_TEMP_PERIOD_LAR_PERIOD_ON_PERIOD_SUCCESS
    #
    staging.delete.temp.lar.on.success=true

    #
    # Set this property to false to enable editing on the live site.
    #
    # Env: LIFERAY_STAGING_PERIOD_LIVE_PERIOD_GROUP_PERIOD_LOCKING_PERIOD_ENABLED
    #
    staging.live.group.locking.enabled=true

    #
    # By default, in a remote staging environment, the live group is marked and
    # staging is prevented on the live group.
    #
    # To achieve a Content Development - UAT - Production environment, staging
    # must be enabled for the UAT live group involved. When staging is enabled
    # for this group, it becomes the live group with respect to the Content
    # Development server and a staging group with respect to the Production
    # server.
    #
    # Set this property to true to allow staging for a live group. If set to
    # true, staging can be turned on for a live group, so that it can
    # simultaneously act as both a live group and a staging group.
    #
    # Env: LIFERAY_STAGING_PERIOD_LIVE_PERIOD_GROUP_PERIOD_REMOTE_PERIOD_STAGING_PERIOD_ENABLED
    #
    staging.live.group.remote.staging.enabled=false

    #
    # Set the file block sizes for remote staging. If a LAR file used for remote
    # staging exceeds this size, the file will be split into multiple files
    # prior to transmission and then reassembled on the remote server. The
    # default buffer size is 10 megabytes.
    #
    # Env: LIFERAY_STAGING_PERIOD_REMOTE_PERIOD_TRANSFER_PERIOD_BUFFER_PERIOD_SIZE
    #
    staging.remote.transfer.buffer.size=10485760

    #
    # Set the interval in hours on how often CheckSystemEventMessageListener
    # will run to check for and delete system events that have been reached the
    # maximum age.
    #
    # Env: LIFERAY_STAGING_PERIOD_SYSTEM_PERIOD_EVENT_PERIOD_CHECK_PERIOD_INTERVAL
    #
    staging.system.event.check.interval=24

    #
    # Set this to the maximum age (in number of hours) that a system event will
    # be kept. Note that these settings may be overridden in Portal Settings for
    # each portal server or in Site Settings for each site.
    #
    # Env: LIFERAY_STAGING_PERIOD_SYSTEM_PERIOD_EVENT_PERIOD_MAX_PERIOD_AGE
    #
    staging.system.event.max.age=0
    
    
    user.groups.copy.layouts.to.user.personal.site=true
    
##
## Value Object
##

    #
    # Set this to true to enable entity level caching.
    #
    value.object.entity.cache.enabled=true
    
    #
    # Entity level caching for a specific type of value object can be configured
    # by using a property name that includes the value object's class name.
    #
    value.object.entity.cache.enabled.com.liferay.portal.kernel.model.Layout=true
    value.object.entity.cache.enabled.com.liferay.portal.kernel.model.User=true
    
    #
    # Set this to true to enable finder level caching.
    #
    value.object.finder.cache.enabled=true
	
	#
    # Finder level caching for a specific type of value object can be configured
    # by using a property name that includes the value object's class name.
    # Mapping tables can also be specified to configure the caching of value
    # object relationships.
    #
    value.object.finder.cache.enabled.com.liferay.portal.kernel.model.Layout=true
    value.object.finder.cache.enabled.com.liferay.portal.kernel.model.User=true
    value.object.finder.cache.enabled.Users_Roles=true
	
	value.object.column.bitmask.enabled=true
	value.object.column.bitmask.enabled.com.liferay.portal.kernel.model.User=true

    #
    # Set this to true to allow Ehcache to use blocking caches. This improves
    # performance significantly by locking on keys instead of the entire cache.
    # The drawback is that threads can hang if the cache is not used properly.
    # Make sure that all queries that return a miss also immediately populate
    # the cache, or else other threads that are blocked on a query of that same
    # key will continue to hang. Reference Ehcache's BlockingCache for more
    # information. The blocking cache is no longer implemented by Ehcache's
    # BlockingCache, but by Liferay's BlockingPortalCache for better safety and
    # faster performance.
    #
    # Blocking cache together with transactional cache performs poorly, because
    # transactional cache affects the cache population visibility across
    # transactions. When transactional cache is on, blocking cache most likely
    # does nothing useful unless the transaction window time is short. When
    # transactional cache is off, it is better to turn on blocking cache for
    # better database access performance.
    #
    # Env: LIFERAY_EHCACHE_PERIOD_BLOCKING_PERIOD_CACHE_PERIOD_ALLOWED
    #
    ehcache.blocking.cache.allowed=false
    
    #
    # Set this to true to configure permission caching to block. See the
    # property "ehcache.blocking.cache.allowed" for more information.
    #
    # Env: LIFERAY_PERMISSIONS_PERIOD_OBJECT_PERIOD_BLOCKING_PERIOD_CACHE
    #
    permissions.object.blocking.cache=false
    
    #
    # Set this to true to configure entity level caching to block. See the
    # property "ehcache.blocking.cache.allowed" for more information.
    #
    # Env: LIFERAY_VALUE_PERIOD_OBJECT_PERIOD_ENTITY_PERIOD_BLOCKING_PERIOD_CACHE
    #
    value.object.entity.blocking.cache=true

##
## Layouts
##

	#
    # Set this to false to disable server side parallel rendering. You can also
    # disable it on a per request basis by setting the attribute key
    # com.liferay.portal.kernel.util.WebKeys.PORTLET_PARALLEL_RENDER to the
    # Boolean.FALSE in a pre service event or by setting the URL parameter
    # "p_p_parallel" to "0".
    #
    # Set this to true to forcibly set the property "portlet.container.restrict"
    # to true, as server side parallel rendering requires restricted request
    # attributes.
    #
    # This feature is only available for Tomcat and will be ignored when the
    # portal is running in other environments.
    #
    # This property is deprecated and only provided for documentation purposes.
    #
    # Env: LIFERAY_LAYOUT_PERIOD_PARALLEL_PERIOD_RENDER_PERIOD_ENABLE
    #
    #layout.parallel.render.enable=false

    #
    # Set the number of core threads used for server side parallel rendering.
    #
    # Env: LIFERAY_LAYOUT_PERIOD_PARALLEL_PERIOD_RENDER_PERIOD_THREAD_PERIOD_POOL_PERIOD_CORE_PERIOD_THREAD_PERIOD_COUNT
    #
    layout.parallel.render.thread.pool.core.thread.count=1

    #
    # Set the time in seconds to keep a thread alive for server side parallel
    # rendering.
    #
    # Env: LIFERAY_LAYOUT_PERIOD_PARALLEL_PERIOD_RENDER_PERIOD_THREAD_PERIOD_POOL_PERIOD_KEEP_PERIOD_ALIVE_PERIOD_TIME
    #
    layout.parallel.render.thread.pool.keep.alive.time=600

    #
    # Set the maximum size of the task queue for server side parallel rendering.
    # An unbounded queue size will never trigger RejectedExecutionHandler. Under
    # heavy load, this will lead to massive memory usage. A bounded queue size
    # with a proper RejectedExecutionHandler can help the server perform
    # graceful degradation.
    #
    # Env: LIFERAY_LAYOUT_PERIOD_PARALLEL_PERIOD_RENDER_PERIOD_THREAD_PERIOD_POOL_PERIOD_MAX_PERIOD_QUEUE_PERIOD_SIZE
    #
    layout.parallel.render.thread.pool.max.queue.size=100

    #
    # Set the maximum number of threads used for server side parallel rendering.
    #
    # Env: LIFERAY_LAYOUT_PERIOD_PARALLEL_PERIOD_RENDER_PERIOD_THREAD_PERIOD_POOL_PERIOD_MAX_PERIOD_THREAD_PERIOD_COUNT
    #
    layout.parallel.render.thread.pool.max.thread.count=20

    #
    # Set the timeout time for server side parallel rendering. On timeout, all
    # pending portlets will fail back to ajax loading or trigger an error
    # message depending on whether the portlets are ajaxable.
    #
    # This timeout is an int value rather than long to avoid some atomic set
    # race condition. The Integer.MAX_VALUE is more than enough for a reasonable
    # timeout.
    #
    # Env: LIFERAY_LAYOUT_PERIOD_PARALLEL_PERIOD_RENDER_PERIOD_TIMEOUT
    #
    layout.parallel.render.timeout=5000
