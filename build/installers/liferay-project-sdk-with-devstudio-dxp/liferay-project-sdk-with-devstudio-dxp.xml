<project>
    <shortName>LiferayProjectSDKwithDevStudioDXP</shortName>
    <fullName>Liferay Project SDK with DevStudio - DXP</fullName>
    <version>2018.7.18</version>
    <logoImage>../shared/images/studio_logo.png</logoImage>
    <componentList>
        <component>
            <name>default</name>
            <description>Default Component</description>
            <canBeEdited>1</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfiles</name>
                    <platforms>all</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../shared/download/biz.aQute.jpm.run.jar</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../shared/download/blade.jar</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../shared/download/gw.jar</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../shared/download/com.liferay.portal.tools.bundle.support.jar</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../shared/download/liferay-dxp-tomcat-7.1.10-ga1-20180703090613030.zip</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../shared/download/com.liferay.portal.plugins.sdk-1.0.19-withdependencies.zip</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../shared/download/biz.aQute.bnd.jar</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux</name>
                    <platforms>linux</platforms>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows</name>
                    <platforms>windows</platforms>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                </folder>
            </folderList>
        </component>
        <include file="../components/devstudio-linuxcomponent.xml" />
        <include file="../components/devstudio-osxcomponent.xml" />
        <include file="../components/devstudio-wincomponent.xml" />
    </componentList>
    <preInstallationActionList>
        <include file="../components/autodetect-java.xml" />
    </preInstallationActionList>
    <postInstallationActionList>
        <createDirectory>
            <path>${user_home_directory}${platform_path_separator}.liferay</path>
            <progressText>Creating directory...</progressText>
        </createDirectory>
        <if>
            <actionList>
                <if>
                    <actionList>
                        <if>
                            <actionList>
                                <setInstallerVariable>
                                    <name>proxyHostArg</name>
                                    <value> -Dhttp.proxyHost=${httpproxyhost}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyPortArg</name>
                                    <value> -Dhttp.proxyPort=${httpproxyport}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyUsernameArg</name>
                                    <value> -Dhttp.proxyUser=${httpproxyusername}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyPasswordArg</name>
                                    <value> -Dhttp.proxyPassword=${httpproxypassword}</value>
                                </setInstallerVariable>
                            </actionList>
                            <ruleList>
                                <compareValues>
                                    <logic>equals</logic>
                                    <value1>${proxysetting}</value1>
                                    <value2>httpProxy</value2>
                                </compareValues>
                            </ruleList>
                        </if>
                        <if>
                            <actionList>
                                <setInstallerVariable>
                                    <name>proxyHostArg</name>
                                    <value> -Dhttps.proxyHost=${httpsproxyhost}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyPortArg</name>
                                    <value> -Dhttps.proxyPort=${httpsproxyport}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyUsernameArg</name>
                                    <value> -Dhttps.proxyUser=${httpsproxyusername}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyPasswordArg</name>
                                    <value> -Dhttps.proxyPassword=${httpsproxypassword}</value>
                                </setInstallerVariable>
                            </actionList>
                            <ruleList>
                                <compareValues>
                                    <logic>equals</logic>
                                    <value1>${proxysetting}</value1>
                                    <value2>httpsProxy</value2>
                                </compareValues>
                            </ruleList>
                        </if>
                        <if>
                            <actionList>
                                <setInstallerVariable>
                                    <name>proxyHostArg</name>
                                    <value> -DsocksProxyHost=${socksproxyhost}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyPortArg</name>
                                    <value> -DsocksProxyPort=${socksproxyport}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyUsernameArg</name>
                                    <value></value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyPasswordArg</name>
                                    <value></value>
                                </setInstallerVariable>
                            </actionList>
                            <ruleList>
                                <compareValues>
                                    <logic>equals</logic>
                                    <value1>${proxysetting}</value1>
                                    <value2>socksProxy</value2>
                                </compareValues>
                            </ruleList>
                        </if>
                    </actionList>
                    <conditionRuleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                    </conditionRuleList>
                    <elseActionList>
                        <setInstallerVariable>
                            <name>proxyHostArg</name>
                            <value></value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>proxyPortArg</name>
                            <value></value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>proxyUsernameArg</name>
                            <value></value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>proxyPasswordArg</name>
                            <value></value>
                        </setInstallerVariable>
                    </elseActionList>
                </if>
                <writeFile>
                    <encoding>utf-8</encoding>
                    <path>${installdir}${platform_path_separator}pwd</path>
                    <text>${password.password}</text>
                </writeFile>
                <runProgram>
                    <customErrorMessage>Could not create DXP download token. Make sure you type correct email address and password and are connected to the internet.</customErrorMessage>
                    <program>${java_executable}</program>
                    <programArguments>-jar${proxyHostArg}${proxyPortArg}${proxyUsernameArg}${proxyPasswordArg} "${installdir}${platform_path_separator}com.liferay.portal.tools.bundle.support.jar" createToken --force --email "${email}" --password-file "${installdir}${platform_path_separator}pwd"</programArguments>
                    <onErrorActionList>
                        <deleteFile>
                            <path>${installdir}</path>
                        </deleteFile>
                    </onErrorActionList>
                </runProgram>
                <deleteFile>
                    <path>${installdir}${platform_path_separator}pwd</path>
                </deleteFile>
            </actionList>
            <conditionRuleList>
                <fileTest>
                    <condition>not_exists</condition>
                    <path>${user_home_directory}${platform_path_separator}.liferay${platform_path_separator}token</path>
                </fileTest>
            </conditionRuleList>
        </if>
        <if>
            <explanation>is linux</explanation>
            <actionList>
                <setInstallerVariable>
                    <name>studioZipPath</name>
                    <value>${installdir}${platform_path_separator}com.liferay.ide.studio-linux.gtk.x86_64.zip</value>
                </setInstallerVariable>
            </actionList>
            <conditionRuleList>
                <compareText>
                    <logic>contains</logic>
                    <nocase>1</nocase>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </conditionRuleList>
            <elseActionList>
                <if>
                    <explanation>is mac</explanation>
                    <actionList>
                        <setInstallerVariable>
                            <name>studioZipPath</name>
                            <value>${installdir}${platform_path_separator}com.liferay.ide.studio-macosx.cocoa.x86_64.zip</value>
                        </setInstallerVariable>
                    </actionList>
                    <conditionRuleList>
                        <compareText>
                            <logic>contains</logic>
                            <nocase>1</nocase>
                            <text>${platform_name}</text>
                            <value>osx</value>
                        </compareText>
                    </conditionRuleList>
                    <elseActionList>
                        <setInstallerVariable>
                            <name>studioZipPath</name>
                            <value>${installdir}${platform_path_separator}com.liferay.ide.studio-win32.win32.x86_64.zip</value>
                        </setInstallerVariable>
                    </elseActionList>
                </if>
            </elseActionList>
        </if>
        <if>
            <actionList>
                <runProgram>
                    <program>chown</program>
                    <programArguments>-R $USER "${installdir}"</programArguments>
                </runProgram>
                <runProgram>
                    <program>unzip</program>
                    <programArguments>${studioZipPath}</programArguments>
                    <progressText>unzipping</progressText>
                    <workingDirectory>${installdir}</workingDirectory>
                </runProgram>
            </actionList>
            <conditionRuleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </conditionRuleList>
            <elseActionList>
                <unzip>
                    <destinationDirectory>${installdir}</destinationDirectory>
                    <progressText>Unpacking files</progressText>
                    <zipFile>${studioZipPath}</zipFile>
                </unzip>
            </elseActionList>
        </if>
        <setInstallerVariable>
            <name>liferayBundlesPath</name>
            <value>${user_home_directory}${platform_path_separator}.liferay${platform_path_separator}bundles</value>
        </setInstallerVariable>
        <createDirectory>
            <path>${liferayBundlesPath}</path>
            <progressText>Creating directory...</progressText>
        </createDirectory>
        <copyFile>
            <destination>${liferayBundlesPath}${platform_path_separator}liferay-dxp-tomcat-7.1.10-ga1-20180703090613030.zip</destination>
            <origin>${installdir}${platform_path_separator}liferay-dxp-tomcat-7.1.10-ga1-20180703090613030.zip</origin>
        </copyFile>
        <copyFile>
            <destination>${liferayBundlesPath}${platform_path_separator}com.liferay.portal.plugins.sdk-1.0.19-withdependencies.zip</destination>
            <origin>${installdir}${platform_path_separator}com.liferay.portal.plugins.sdk-1.0.19-withdependencies.zip</origin>
        </copyFile>
        <include file="../components/run-java-jpm.xml" />
        <if>
            <explanation>is linux</explanation>
            <actionList>
                <setInstallerVariable name="jpmSystemPath" value="${user_home_directory}/jpm/bin"/>
                <setInstallerVariable name="jpmSettingPath" value="${user_home_directory}/.jpm"/>
            </actionList>
            <conditionRuleList>
                <compareText>
                    <logic>contains</logic>
                    <nocase>1</nocase>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </conditionRuleList>
            <elseActionList>
                <if>
                    <explanation>is mac</explanation>
                    <actionList>
                        <setInstallerVariable name="jpmSystemPath" value="${user_home_directory}/Library/PackageManager/bin"/>
                        <setInstallerVariable name="jpmSettingPath" value="${user_home_directory}/.jpm"/>
                    </actionList>
                    <conditionRuleList>
                        <compareText>
                            <logic>contains</logic>
                            <nocase>1</nocase>
                            <text>${platform_name}</text>
                            <value>osx</value>
                        </compareText>
                    </conditionRuleList>
                    <elseActionList>
                        <setInstallerVariable>
                            <name>jpmSystemPath</name>
                            <value>${user_home_directory}\.jpm\windows\bin</value>
                        </setInstallerVariable>
                    </elseActionList>
                </if>
            </elseActionList>
        </if>
        <addDirectoryToPath>
            <insertAt>end</insertAt>
            <path>${jpmSystemPath}</path>
        </addDirectoryToPath>
        <include file="../components/set-installer-variable-jpm.xml" />
        <include file="../components/set-installer-variable-blade.xml" />
        <include file="../components/set-installer-variable-gw.xml" />
        <include file="../components/set-installer-variable-bnd.xml" />
        <include file="../components/run-jpm-install-blade.xml" />
        <include file="../components/run-jpm-install-gw.xml" />
        <include file="../components/run-jpm-install-bnd.xml" />
        <runProgram>
            <program>chown</program>
            <programArguments>-R ${env(SUDO_USER)} "${user_home_directory}/jpm"</programArguments>
            <ruleList>
                <isTrue>
                    <value>${installer_is_root_install}</value>
                </isTrue>
                <compareText>
                    <logic>does_not_contain</logic>
                    <nocase>1</nocase>
                    <text>${platform_name}</text>
                    <value>win</value>
                </compareText>
                <fileExists>
                    <path>${user_home_directory}/jpm</path>
                </fileExists>
            </ruleList>
        </runProgram>
        <runProgram>
            <program>chown</program>
            <programArguments>-R ${env(SUDO_USER)} ${jpmSettingPath}</programArguments>
            <ruleList>
                <isTrue>
                    <value>${installer_is_root_install}</value>
                </isTrue>
                <compareText>
                    <logic>does_not_contain</logic>
                    <nocase>1</nocase>
                    <text>${platform_name}</text>
                    <value>win</value>
                </compareText>
                <fileExists>
                    <path>${jpmSettingPath}</path>
                </fileExists>
            </ruleList>
        </runProgram>
        <setInstallerVariable>
            <name>bladeCommandPath</name>
            <value>${jpmSystemPath}${platform_path_separator}blade</value>
        </setInstallerVariable>
        <runProgram>
            <program>chown</program>
            <programArguments>-R ${env(SUDO_USER)} ${user_home_directory}/.gradle</programArguments>
            <ruleList>
                <isTrue>
                    <value>${installer_is_root_install}</value>
                </isTrue>
                <compareText>
                    <logic>does_not_contain</logic>
                    <nocase>1</nocase>
                    <text>${platform_name}</text>
                    <value>win</value>
                </compareText>
            </ruleList>
        </runProgram>
        <runProgram>
            <program>${bladeCommandPath}</program>
            <programArguments>--base "${lrws}" init</programArguments>
        </runProgram>
        <propertiesFileSet>
            <file>${lrws}${platform_path_separator}gradle.properties</file>
            <key>liferay.workspace.bundle.token.download</key>
            <value>true</value>
        </propertiesFileSet>
        <propertiesFileSet>
            <file>${lrws}${platform_path_separator}gradle.properties</file>
            <key>liferay.workspace.bundle.url</key>
            <value>https://api.liferay.com/downloads/portal/7.1.10/liferay-dxp-tomcat-7.1.10-ga1-20180703090613030.zip</value>
        </propertiesFileSet>
        <createDirectory>
            <path>${lrws}${platform_path_separator}configs${platform_path_separator}common${platform_path_separator}deploy</path>
            <ruleList>
                <fileTest>
                    <condition>exists</condition>
                    <path>${activationKey}</path>
                </fileTest>
            </ruleList>
        </createDirectory>
        <copyFile>
            <destination>${lrws}${platform_path_separator}configs${platform_path_separator}common${platform_path_separator}deploy${platform_path_separator}activation_key.xml</destination>
            <origin>${activationKey}</origin>
            <ruleList>
                <fileTest>
                    <condition>exists</condition>
                    <path>${activationKey}</path>
                </fileTest>
            </ruleList>
        </copyFile>
        <createDirectory>
            <path>${user_home_directory}${platform_path_separator}.gradle</path>
        </createDirectory>
        <if>
            <actionList>
                <propertiesFileSet>
                    <file>${user_home_directory}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.http.proxyHost</key>
                    <value>${httpproxyhost}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${user_home_directory}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.http.proxyPort</key>
                    <value>${httpproxyport}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${user_home_directory}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.http.proxyUser</key>
                    <value>${httpproxyusername}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${user_home_directory}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.http.proxyPassword</key>
                    <value>${httpproxypassword}</value>
                </propertiesFileSet>
            </actionList>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxysetting}</value1>
                            <value2>httpProxy</value2>
                        </compareValues>
                    </ruleList>
                </ruleGroup>
            </ruleList>
        </if>
        <if>
            <actionList>
                <propertiesFileSet>
                    <file>${user_home_directory}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.https.proxyHost</key>
                    <value>${httpsproxyhost}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${user_home_directory}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.https.proxyPort</key>
                    <value>${httpsproxyport}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${user_home_directory}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.https.proxyUser</key>
                    <value>${httpsproxyusername}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${user_home_directory}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.https.proxyPassword</key>
                    <value>${httpsproxypassword}</value>
                </propertiesFileSet>
            </actionList>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxysetting}</value1>
                            <value2>httpsProxy</value2>
                        </compareValues>
                    </ruleList>
                </ruleGroup>
            </ruleList>
        </if>
        <if>
            <actionList>
                <propertiesFileSet>
                    <file>${user_home_directory}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.socks.proxyHost</key>
                    <value>${socksproxyhost}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${user_home_directory}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.socks.proxyPort</key>
                    <value>${socksproxyport}</value>
                </propertiesFileSet>
            </actionList>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxysetting}</value1>
                            <value2>socksProxy</value2>
                        </compareValues>
                    </ruleList>
                </ruleGroup>
            </ruleList>
        </if>
        <runProgram>
            <program>chown</program>
            <programArguments>-R ${env(SUDO_USER)} ${lrws}</programArguments>
            <ruleList>
                <isTrue>
                    <value>${installer_is_root_install}</value>
                </isTrue>
                <compareText>
                    <logic>does_not_contain</logic>
                    <nocase>1</nocase>
                    <text>${platform_name}</text>
                    <value>win</value>
                </compareText>
                <fileExists>
                    <path>${lrws}</path>
                </fileExists>
            </ruleList>
        </runProgram>
        <deleteFile>
            <path>${installdir}${platform_path_separator}liferay-dxp-tomcat-7.1.10-ga1-20180703090613030.zip</path>
        </deleteFile>
        <deleteFile>
            <path>${installdir}${platform_path_separator}com.liferay.portal.plugins.sdk-1.0.19-withdependencies.zip</path>
        </deleteFile>
        <deleteFile>
            <path>${installdir}${platform_path_separator}blade.jar</path>
        </deleteFile>
        <deleteFile>
            <path>${installdir}${platform_path_separator}gw.jar</path>
        </deleteFile>
        <deleteFile>
            <path>${installdir}${platform_path_separator}biz.aQute.jpm.run.jar</path>
        </deleteFile>
        <deleteFile>
            <path>${installdir}${platform_path_separator}com.liferay.portal.tools.bundle.support.jar</path>
        </deleteFile>
        <deleteFile>
            <path>${installdir}${platform_path_separator}biz.aQute.bnd.jar</path>
        </deleteFile>
        <deleteFile>
            <path>${studioZipPath}</path>
        </deleteFile>
    </postInstallationActionList>
    <allowWindowResize>1</allowWindowResize>
    <createOsxBundleDmg>1</createOsxBundleDmg>
    <createUninstaller>0</createUninstaller>
    <disableSplashScreen>1</disableSplashScreen>
    <enableRollback>1</enableRollback>
    <enableTimestamp>1</enableTimestamp>
    <outputDirectory>../outputs</outputDirectory>
    <startMenuGroupName></startMenuGroupName>
    <vendor>Liferay, Inc</vendor>
    <parameterList>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value></value>
            <default>${platform_install_prefix}/${product_shortname}</default>
            <allowEmptyValue>0</allowEmptyValue>
            <cliOptionName>prefix</cliOptionName>
            <mustBeWritable>1</mustBeWritable>
            <mustExist>0</mustExist>
            <width>30</width>
            <preShowPageActionList>
                <setInstallerVariable>
                    <name>installdir</name>
                    <value>${user_home_directory}/${product_shortname}</value>
                    <ruleList>
                        <compareText>
                            <logic>contains</logic>
                            <nocase>1</nocase>
                            <text>${platform_name}</text>
                            <value>osx</value>
                        </compareText>
                    </ruleList>
                </setInstallerVariable>
            </preShowPageActionList>
            <validationActionList>
                <if>
                    <explanation>is empty</explanation>
                    <actionList>
                        <throwError>
                            <text>the folder must be empty</text>
                        </throwError>
                    </actionList>
                    <conditionRuleList>
                        <fileTest>
                            <condition>is_not_empty</condition>
                            <path>${installdir}</path>
                        </fileTest>
                    </conditionRuleList>
                </if>
            </validationActionList>
        </directoryParameter>
        <directoryParameter>
            <name>lrws</name>
            <title>Liferay Workspace</title>
            <description>Directory:</description>
            <explanation></explanation>
            <value></value>
            <default>${installdir}${platform_path_separator}liferay-workspace</default>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>0</ask>
            <mustBeWritable>1</mustBeWritable>
            <mustExist>0</mustExist>
            <width>30</width>
        </directoryParameter>
        <parameterGroup>
            <name>dxpinfo</name>
            <title>Download Liferay DXP Bundle</title>
            <explanation>Email address and password are used for generating a download token. Your password will not be saved locally.</explanation>
            <value></value>
            <default></default>
            <parameterList>
                <stringParameter>
                    <name>email</name>
                    <title>liferay.com email address</title>
                    <description>liferay.com Email Address:</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>0</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <passwordParameter>
                    <name>password</name>
                    <title>Password</title>
                    <description>liferay.com Email Password:</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>0</allowEmptyValue>
                    <askForConfirmation>0</askForConfirmation>
                    <descriptionRetype></descriptionRetype>
                    <width>20</width>
                </passwordParameter>
            </parameterList>
            <ruleList>
                <fileTest>
                    <condition>not_exists</condition>
                    <path>${user_home_directory}${platform_path_separator}.liferay${platform_path_separator}token</path>
                </fileTest>
            </ruleList>
        </parameterGroup>
        <fileParameter>
            <name>activationKey</name>
            <title>DXP Activation Key (Optional)</title>
            <description>activation key file</description>
            <explanation>Please select the activation key file for Liferay DXP. If you skip this step, you can add the activation key into auto-deploy folder later.</explanation>
            <value></value>
            <default></default>
            <allowEmptyValue>1</allowEmptyValue>
            <mustBeWritable>0</mustBeWritable>
            <mustExist>1</mustExist>
            <width>30</width>
        </fileParameter>
        <choiceParameterGroup>
            <name>proxy</name>
            <description>Proxy Configuration</description>
            <explanation>To configure the proxy settings for Liferay workspace, select "Configure proxy settings" below.  These settings will be saved in ~/.gradle/gradle.properties.</explanation>
            <value></value>
            <default>skipproxysetting</default>
            <parameterList>
                <labelParameter>
                    <name>skipproxysetting</name>
                    <description>Skip proxy configuration</description>
                    <explanation></explanation>
                    <image></image>
                </labelParameter>
                <choiceParameter>
                    <name>proxysetting</name>
                    <description>Configure proxy settings</description>
                    <explanation></explanation>
                    <value></value>
                    <default>httpProxy</default>
                    <allowEmptyValue>0</allowEmptyValue>
                    <displayType>combobox</displayType>
                    <ordering>default</ordering>
                    <width>40</width>
                    <optionList>
                        <option>
                            <description></description>
                            <image></image>
                            <text>HTTP Proxy</text>
                            <value>httpProxy</value>
                        </option>
                        <option>
                            <description></description>
                            <image></image>
                            <text>HTTPS Proxy</text>
                            <value>httpsProxy</value>
                        </option>
                        <option>
                            <description></description>
                            <image></image>
                            <text>SOCKS5 Proxy</text>
                            <value>socksProxy</value>
                        </option>
                    </optionList>
                </choiceParameter>
            </parameterList>
        </choiceParameterGroup>
        <parameterGroup>
            <name>httpproxyinfo</name>
            <title>HTTP Proxy Information</title>
            <explanation></explanation>
            <value></value>
            <default></default>
            <parameterList>
                <stringParameter>
                    <name>httpproxyhost</name>
                    <description>Proxy Host</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>httpproxyport</name>
                    <description>Proxy Port</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>httpproxyusername</name>
                    <description>Proxy Username</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>httpproxypassword</name>
                    <description>Proxy Password</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
            </parameterList>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxysetting}</value1>
                            <value2>httpProxy</value2>
                        </compareValues>
                    </ruleList>
                </ruleGroup>
            </ruleList>
        </parameterGroup>
        <parameterGroup>
            <name>httppsroxyinfo</name>
            <title>HTTPS Proxy Information</title>
            <explanation></explanation>
            <value></value>
            <default></default>
            <parameterList>
                <stringParameter>
                    <name>httpsproxyhost</name>
                    <description>Proxy Host</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>httpsproxyport</name>
                    <description>Proxy Port</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>httpsproxyusername</name>
                    <description>Proxy Username</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>httpsproxypassword</name>
                    <description>Proxy Password</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
            </parameterList>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxysetting}</value1>
                            <value2>httpsProxy</value2>
                        </compareValues>
                    </ruleList>
                </ruleGroup>
            </ruleList>
        </parameterGroup>
        <parameterGroup>
            <name>socksroxyinfo</name>
            <title>SOCKS5 Proxy Information</title>
            <explanation></explanation>
            <value></value>
            <default></default>
            <parameterList>
                <stringParameter>
                    <name>socksproxyhost</name>
                    <description>Proxy Host</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>socksproxyport</name>
                    <description>Proxy Port</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
            </parameterList>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxysetting}</value1>
                            <value2>socksProxy</value2>
                        </compareValues>
                    </ruleList>
                </ruleGroup>
            </ruleList>
        </parameterGroup>
    </parameterList>
    <showFileUnpackingProgress>0</showFileUnpackingProgress>
</project>

