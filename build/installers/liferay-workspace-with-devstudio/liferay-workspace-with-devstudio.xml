<project>
    <shortName>LiferayWorkspacewithDevStudio</shortName>
    <fullName>Liferay Workspace with DevStudio</fullName>
    <version></version>
    <logoImage>../shared/images/studio_logo.png</logoImage>
    <componentList>
        <component>
            <name>default</name>
            <description>Default Component</description>
            <canBeEdited>1</canBeEdited>
            <selected>1</selected>
            <show>1</show>
            <folderList>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfiles</name>
                    <platforms>all</platforms>
                    <distributionFileList>
                        <distributionFile>
                            <origin>../shared/download/biz.aQute.jpm.run.jar</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../shared/download/blade.jar</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../shared/download/gw.jar</origin>
                        </distributionFile>
                        <distributionFile>
                            <origin>../shared/download/biz.aQute.bnd.jar</origin>
                        </distributionFile>
                    </distributionFileList>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileslinux</name>
                    <platforms>linux</platforms>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfileswindows</name>
                    <platforms>windows</platforms>
                </folder>
                <folder>
                    <description>Program Files</description>
                    <destination>${installdir}</destination>
                    <name>programfilesosx</name>
                    <platforms>osx</platforms>
                </folder>
            </folderList>
        </component>
        <include>
            <file>../components/devstudio-linuxcomponent.xml</file>
        </include>
        <include>
            <file>../components/devstudio-osxcomponent.xml</file>
        </include>
        <include>
            <file>../components/devstudio-wincomponent.xml</file>
        </include>
    </componentList>
    <preInstallationActionList>
        <include>
            <file>../components/autodetect-java.xml</file>
        </include>
        <include>
            <file>../components/autodetect-java-windows.xml</file>
        </include>
    </preInstallationActionList>
    <postInstallationActionList>
        <if>
            <actionList>
                <createDirectory>
                    <path>${userHome}${platform_path_separator}.liferay</path>
                    <progressText>Creating directory...</progressText>
                </createDirectory>
                <pathManipulation>
                    <action>nativeAbsolutize</action>
                    <path>${java_executable}/..</path>
                    <variable>java_bin_dir</variable>
                </pathManipulation>
            </actionList>
            <conditionRuleList>
                <isTrue value="${clitools}"/>
            </conditionRuleList>
        </if>
        <if>
            <actionList>
                <if>
                    <actionList>
                        <if>
                            <actionList>
                                <setInstallerVariable>
                                    <name>proxyHostArg</name>
                                    <value> -Dhttp.proxyHost=${httpproxyhost}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyPortArg</name>
                                    <value> -Dhttp.proxyPort=${httpproxyport}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyUsernameArg</name>
                                    <value> -Dhttp.proxyUser=${httpproxyusername}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyPasswordArg</name>
                                    <value> -Dhttp.proxyPassword=${httpproxypassword}</value>
                                </setInstallerVariable>
                            </actionList>
                            <ruleList>
                                <compareValues>
                                    <logic>equals</logic>
                                    <value1>${proxysetting}</value1>
                                    <value2>httpProxy</value2>
                                </compareValues>
                            </ruleList>
                        </if>
                        <if>
                            <actionList>
                                <setInstallerVariable>
                                    <name>proxyHostArg</name>
                                    <value> -Dhttps.proxyHost=${httpsproxyhost}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyPortArg</name>
                                    <value> -Dhttps.proxyPort=${httpsproxyport}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyUsernameArg</name>
                                    <value> -Dhttps.proxyUser=${httpsproxyusername}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyPasswordArg</name>
                                    <value> -Dhttps.proxyPassword=${httpsproxypassword}</value>
                                </setInstallerVariable>
                            </actionList>
                            <ruleList>
                                <compareValues>
                                    <logic>equals</logic>
                                    <value1>${proxysetting}</value1>
                                    <value2>httpsProxy</value2>
                                </compareValues>
                            </ruleList>
                        </if>
                        <if>
                            <actionList>
                                <setInstallerVariable>
                                    <name>proxyHostArg</name>
                                    <value> -DsocksProxyHost=${socksproxyhost}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyPortArg</name>
                                    <value> -DsocksProxyPort=${socksproxyport}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyUsernameArg</name>
                                    <value></value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>proxyPasswordArg</name>
                                    <value></value>
                                </setInstallerVariable>
                            </actionList>
                            <ruleList>
                                <compareValues>
                                    <logic>equals</logic>
                                    <value1>${proxysetting}</value1>
                                    <value2>socksProxy</value2>
                                </compareValues>
                            </ruleList>
                        </if>
                    </actionList>
                    <conditionRuleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                    </conditionRuleList>
                    <elseActionList>
                        <setInstallerVariable>
                            <name>proxyHostArg</name>
                            <value></value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>proxyPortArg</name>
                            <value></value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>proxyUsernameArg</name>
                            <value></value>
                        </setInstallerVariable>
                        <setInstallerVariable>
                            <name>proxyPasswordArg</name>
                            <value></value>
                        </setInstallerVariable>
                    </elseActionList>
                </if>
                <writeFile>
                    <encoding>utf-8</encoding>
                    <path>${installdir}${platform_path_separator}pwd</path>
                    <text>${password.password}</text>
                </writeFile>
                <deleteFile>
                    <path>${installdir}${platform_path_separator}pwd</path>
                </deleteFile>
            </actionList>
        </if>
        <if>
            <explanation>is linux</explanation>
            <actionList>
                <setInstallerVariable>
                    <name>studioZipPath</name>
                    <value>${installdir}${platform_path_separator}com.liferay.ide.studio-linux.gtk.x86_64.zip</value>
                </setInstallerVariable>
            </actionList>
            <conditionRuleList>
                <compareText>
                    <logic>contains</logic>
                    <nocase>1</nocase>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </conditionRuleList>
            <elseActionList>
                <if>
                    <explanation>is mac</explanation>
                    <actionList>
                        <setInstallerVariable>
                            <name>studioZipPath</name>
                            <value>${installdir}${platform_path_separator}com.liferay.ide.studio-macosx.cocoa.x86_64.zip</value>
                        </setInstallerVariable>
                    </actionList>
                    <conditionRuleList>
                        <compareText>
                            <logic>contains</logic>
                            <nocase>1</nocase>
                            <text>${platform_name}</text>
                            <value>osx</value>
                        </compareText>
                    </conditionRuleList>
                    <elseActionList>
                        <setInstallerVariable>
                            <name>studioZipPath</name>
                            <value>${installdir}${platform_path_separator}com.liferay.ide.studio-win32.win32.x86_64.zip</value>
                        </setInstallerVariable>
                    </elseActionList>
                </if>
            </elseActionList>
        </if>
        <if>
            <actionList>
                <runProgram>
                    <program>chown</program>
                    <programArguments>-R $USER "${installdir}"</programArguments>
                </runProgram>
                <runProgram>
                    <program>unzip</program>
                    <programArguments>${studioZipPath}</programArguments>
                    <progressText>unzipping</progressText>
                    <workingDirectory>${installdir}</workingDirectory>
                </runProgram>
                <runProgram>
                    <program>chmod</program>
                    <programArguments>+w "${installdir}"/LiferayDeveloperStudio.app/Contents/Eclipse/DeveloperStudio.ini</programArguments>
                </runProgram>
                <dirName>
                    <path>${java_executable}</path>
                    <variable>find_in_path</variable>
                    <ruleList>
                        <isFalse>
                            <value>${java_autodetected}</value>
                        </isFalse>
                    </ruleList>
                </dirName>
                <findFile>
                    <baseDirectory>${find_in_path}/../</baseDirectory>
                    <pattern>libjli.dylib</pattern>
                    <variable>libjli_path</variable>
                    <ruleList>
                        <isFalse>
                            <value>${java_autodetected}</value>
                        </isFalse>
                    </ruleList>
                </findFile>
                <addTextToFile>
                    <file>${installdir}/LiferayDeveloperStudio.app/Contents/Eclipse/DeveloperStudio.ini</file>
                    <insertAt>beginning</insertAt>
                    <text>-vm
${libjli_path}
</text>
                    <ruleList>
                        <isFalse>
                            <value>${java_autodetected}</value>
                        </isFalse>
                    </ruleList>
                </addTextToFile>
            </actionList>
            <conditionRuleList>
                <platformTest>
                    <type>osx</type>
                </platformTest>
            </conditionRuleList>
            <elseActionList>
                <unzip>
                    <addToUninstaller>0</addToUninstaller>
                    <destinationDirectory>${installdir}</destinationDirectory>
                    <progressText>Unpacking files</progressText>
                    <zipFile>${studioZipPath}</zipFile>
                </unzip>
                <addTextToFile>
                    <file>${installdir}/liferay-developer-studio/DeveloperStudio.ini</file>
                    <insertAt>beginning</insertAt>
                    <text>-vm
${java_executable}
</text>
                    <ruleList>
                        <isFalse>
                            <value>${java_autodetected}</value>
                        </isFalse>
                    </ruleList>
                </addTextToFile>
            </elseActionList>
        </if>
        <if>
            <explanation>is linux</explanation>
            <actionList>
                <setInstallerVariable name="jpmSystemPath" value="${userHome}/jpm/bin"/>
                <setInstallerVariable name="jpmSettingPath" value="${userHome}/.jpm"/>
            </actionList>
            <conditionRuleList>
                <compareText>
                    <logic>contains</logic>
                    <nocase>1</nocase>
                    <text>${platform_name}</text>
                    <value>linux</value>
                </compareText>
            </conditionRuleList>
            <elseActionList>
                <if>
                    <explanation>is mac</explanation>
                    <actionList>
                        <setInstallerVariable name="jpmSystemPath" value="${userHome}/Library/PackageManager/bin"/>
                        <setInstallerVariable name="jpmSettingPath" value="${userHome}/.jpm"/>
                    </actionList>
                    <conditionRuleList>
                        <compareText>
                            <logic>contains</logic>
                            <nocase>1</nocase>
                            <text>${platform_name}</text>
                            <value>osx</value>
                        </compareText>
                        <isTrue value="${clitools}"/>
                    </conditionRuleList>
                    <elseActionList>
                        <if>
                            <actionList>
                                <setInstallerVariable name="jpmSystemPath" value="${userHome}\.jpm\windows\bin"/>
                                <setInstallerVariable name="jpmSettingPath" value="${userHome}\.jpm\windows"/>
                            </actionList>
                            <conditionRuleList>
                                <isTrue value="${clitools}"/>
                            </conditionRuleList>
                        </if>
                    </elseActionList>
                </if>
            </elseActionList>
        </if>
        <if>
            <actionList>
                <include>
                    <file>../components/run-java-jpm.xml</file>
                </include>
                <include>
                    <file>../components/run-java-jpm-win.xml</file>
                </include>
            </actionList>
            <conditionRuleList>
                <isTrue value="${clitools}"/>
            </conditionRuleList>
        </if>
        <if>
            <actionList>
                <addDirectoryToPath>
                    <insertAt>end</insertAt>
                    <path>${jpmSystemPath}</path>
                </addDirectoryToPath>
                <include>
                    <file>../components/set-installer-variable-jpm.xml</file>
                </include>
                <include>
                    <file>../components/set-installer-variable-blade.xml</file>
                </include>
                <include>
                    <file>../components/set-installer-variable-gw.xml</file>
                </include>
                <include>
                    <file>../components/set-installer-variable-bnd.xml</file>
                </include>
                <include>
                    <file>../components/run-jpm-install-blade.xml</file>
                </include>
                <include>
                    <file>../components/run-jpm-install-blade-win.xml</file>
                </include>
                <include>
                    <file>../components/run-jpm-install-gw.xml</file>
                </include>
                <include>
                    <file>../components/run-jpm-install-gw-win.xml</file>
                </include>
                <include>
                    <file>../components/run-jpm-install-bnd.xml</file>
                </include>
                <include>
                    <file>../components/run-jpm-install-bnd-win.xml</file>
                </include>
                <runProgram>
                    <program>chown</program>
                    <programArguments>-R ${env(SUDO_USER)} "${userHome}/jpm"</programArguments>
                    <ruleList>
                        <isTrue>
                            <value>${installer_is_root_install}</value>
                        </isTrue>
                        <compareText>
                            <logic>does_not_contain</logic>
                            <nocase>1</nocase>
                            <text>${platform_name}</text>
                            <value>win</value>
                        </compareText>
                        <fileExists>
                            <path>${userHome}/jpm</path>
                        </fileExists>
                    </ruleList>
                </runProgram>
                <runProgram>
                    <program>chown</program>
                    <programArguments>-R ${env(SUDO_USER)} ${jpmSettingPath}</programArguments>
                    <ruleList>
                        <isTrue>
                            <value>${installer_is_root_install}</value>
                        </isTrue>
                        <compareText>
                            <logic>does_not_contain</logic>
                            <nocase>1</nocase>
                            <text>${platform_name}</text>
                            <value>win</value>
                        </compareText>
                        <fileExists>
                            <path>${jpmSettingPath}</path>
                        </fileExists>
                    </ruleList>
                </runProgram>
                <setInstallerVariable>
                    <name>bladeCommandPath</name>
                    <value>${jpmSystemPath}${platform_path_separator}blade</value>
                </setInstallerVariable>
                <runProgram>
                    <program>chown</program>
                    <programArguments>-R ${env(SUDO_USER)} ${userHome}/.gradle</programArguments>
                    <ruleList>
                        <isTrue>
                            <value>${installer_is_root_install}</value>
                        </isTrue>
                        <compareText>
                            <logic>does_not_contain</logic>
                            <nocase>1</nocase>
                            <text>${platform_name}</text>
                            <value>win</value>
                        </compareText>
                    </ruleList>
                </runProgram>
                <if>
                    <actionList>
                        <runProgram>
                            <program>${java_executable}</program>
                            <programArguments> -jar "${bladeFilePath}" --base "${lrws}" init -v "dxp-7.4-ga1"</programArguments>
                        </runProgram>
                        <createDirectory>
                            <path>${lrws}${platform_path_separator}configs${platform_path_separator}common${platform_path_separator}deploy</path>
                            <ruleList>
                                <fileTest>
                                    <condition>exists</condition>
                                    <path>${activationKey}</path>
                                </fileTest>
                            </ruleList>
                        </createDirectory>
                        <copyFile>
                            <destination>${lrws}${platform_path_separator}configs${platform_path_separator}common${platform_path_separator}deploy${platform_path_separator}activation_key.xml</destination>
                            <origin>${activationKey}</origin>
                            <ruleList>
                                <fileTest>
                                    <condition>exists</condition>
                                    <path>${activationKey}</path>
                                </fileTest>
                            </ruleList>
                        </copyFile>
                    </actionList>
                    <conditionRuleList>
                        <compareText>
                            <logic>equals</logic>
                            <text>${productkey}</text>
                            <value>dxp</value>
                        </compareText>
                    </conditionRuleList>
                    <elseActionList>
                        <runProgram>
                            <program>${java_executable}</program>
                            <programArguments> -jar "${bladeFilePath}" --base "${lrws}" init -v "portal-7.4-ga4"</programArguments>
                        </runProgram>
                    </elseActionList>
                </if>
                <if>
                    <explanation>need to configure Blade CLI with proxy settings</explanation>
                    <actionList>
                        <if>
                            <actionList>
                                <setInstallerVariable>
                                    <name>bladeProxyHostArg</name>
                                    <value> -Dhttp.proxyHost=${bladehttpproxyhost}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>bladeProxyPortArg</name>
                                    <value> -Dhttp.proxyPort=${bladehttpproxyport}</value>
                                </setInstallerVariable>
                            </actionList>
                            <ruleList>
                                <compareText>
                                    <logic>equals</logic>
                                    <text>${bladeproxysetting}</text>
                                    <value>bladehttpProxy</value>
                                </compareText>
                            </ruleList>
                        </if>
                        <if>
                            <actionList>
                                <setInstallerVariable>
                                    <name>bladeProxyHostArg</name>
                                    <value> -Dhttps.proxyHost=${bladehttpsproxyhost}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>bladeProxyPortArg</name>
                                    <value> -Dhttps.proxyPort=${bladehttpsproxyport}</value>
                                </setInstallerVariable>
                            </actionList>
                            <ruleList>
                                <compareText>
                                    <logic>equals</logic>
                                    <text>${bladeproxysetting}</text>
                                    <value>bladehttpsProxy</value>
                                </compareText>
                            </ruleList>
                        </if>
                        <if>
                            <actionList>
                                <setInstallerVariable>
                                    <name>bladeProxyHostArg</name>
                                    <value> -DsystemProp.socks.proxyHost=${bladesocksproxyhost}</value>
                                </setInstallerVariable>
                                <setInstallerVariable>
                                    <name>bladeProxyPortArg</name>
                                    <value> -DsystemProp.socks.proxyPort=${bladesocksproxyport}</value>
                                </setInstallerVariable>
                            </actionList>
                            <ruleList>
                                <compareText>
                                    <logic>equals</logic>
                                    <text>${bladeproxysetting}</text>
                                    <value>bladesocksProxy</value>
                                </compareText>
                            </ruleList>
                        </if>
                        <runProgram>
                            <program>${java_executable}</program>
                            <programArguments> -jar "${installdir}${platform_path_separator}biz.aQute.jpm.run.jar" command --jvmargs "${bladeProxyHostArg} ${bladeProxyPortArg}" jpm</programArguments>
                        </runProgram>
                        <runProgram>
                            <program>${java_executable}</program>
                            <programArguments> -jar "${installdir}${platform_path_separator}biz.aQute.jpm.run.jar" command --jvmargs "${bladeProxyHostArg} ${bladeProxyPortArg}" blade</programArguments>
                        </runProgram>
                    </actionList>
                    <ruleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${bladeproxy}</value1>
                            <value2>bladeproxysetting</value2>
                        </compareValues>
                    </ruleList>
                </if>
                <createDirectory>
                    <path>${userHome}${platform_path_separator}.gradle</path>
                </createDirectory>
            </actionList>
            <conditionRuleList>
                <isTrue value="${clitools}"/>
            </conditionRuleList>
        </if>
        <if>
            <actionList>
                <propertiesFileSet>
                    <file>${userHome}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.http.proxyHost</key>
                    <value>${httpproxyhost}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${userHome}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.http.proxyPort</key>
                    <value>${httpproxyport}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${userHome}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.http.proxyUser</key>
                    <value>${httpproxyusername}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${userHome}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.http.proxyPassword</key>
                    <value>${httpproxypassword}</value>
                </propertiesFileSet>
            </actionList>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxysetting}</value1>
                            <value2>httpProxy</value2>
                        </compareValues>
                    </ruleList>
                </ruleGroup>
            </ruleList>
        </if>
        <if>
            <actionList>
                <propertiesFileSet>
                    <file>${userHome}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.https.proxyHost</key>
                    <value>${httpsproxyhost}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${userHome}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.https.proxyPort</key>
                    <value>${httpsproxyport}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${userHome}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.https.proxyUser</key>
                    <value>${httpsproxyusername}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${userHome}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.https.proxyPassword</key>
                    <value>${httpsproxypassword}</value>
                </propertiesFileSet>
            </actionList>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxysetting}</value1>
                            <value2>httpsProxy</value2>
                        </compareValues>
                    </ruleList>
                </ruleGroup>
            </ruleList>
        </if>
        <if>
            <actionList>
                <propertiesFileSet>
                    <file>${userHome}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.socks.proxyHost</key>
                    <value>${socksproxyhost}</value>
                </propertiesFileSet>
                <propertiesFileSet>
                    <file>${userHome}${platform_path_separator}.gradle${platform_path_separator}gradle.properties</file>
                    <key>systemProp.socks.proxyPort</key>
                    <value>${socksproxyport}</value>
                </propertiesFileSet>
            </actionList>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxysetting}</value1>
                            <value2>socksProxy</value2>
                        </compareValues>
                    </ruleList>
                </ruleGroup>
            </ruleList>
        </if>
        <runProgram>
            <program>chown</program>
            <programArguments>-R ${env(SUDO_USER)} ${lrws}</programArguments>
            <ruleList>
                <isTrue>
                    <value>${installer_is_root_install}</value>
                </isTrue>
                <compareText>
                    <logic>does_not_contain</logic>
                    <nocase>1</nocase>
                    <text>${platform_name}</text>
                    <value>win</value>
                </compareText>
                <fileExists>
                    <path>${lrws}</path>
                </fileExists>
            </ruleList>
        </runProgram>
        <deleteFile>
            <path>${installdir}${platform_path_separator}blade.jar</path>
        </deleteFile>
        <deleteFile>
            <path>${installdir}${platform_path_separator}gw.jar</path>
        </deleteFile>
        <deleteFile>
            <path>${installdir}${platform_path_separator}biz.aQute.jpm.run.jar</path>
        </deleteFile>
        <deleteFile>
            <path>${installdir}${platform_path_separator}biz.aQute.bnd.jar</path>
        </deleteFile>
        <deleteFile>
            <path>${studioZipPath}</path>
        </deleteFile>
    </postInstallationActionList>
    <allowWindowResize>1</allowWindowResize>
    <createOsxBundleDmg>1</createOsxBundleDmg>
    <createUninstaller>0</createUninstaller>
    <disableSplashScreen>1</disableSplashScreen>
    <enableRollback>1</enableRollback>
    <enableTimestamp>1</enableTimestamp>
    <outputDirectory>../outputs</outputDirectory>
    <showFileUnpackingProgress>0</showFileUnpackingProgress>
    <startMenuGroupName></startMenuGroupName>
    <vendor>Liferay, Inc</vendor>
    <width>600</width>
    <parameterList>
        <fileParameter>
            <name>java_executable</name>
            <title>Select a valid Java(tm) Executable</title>
            <description>Java(tm) Executable</description>
            <explanation>Please select a valid Java(tm) Executable</explanation>
            <value></value>
            <default></default>
            <allowEmptyValue>0</allowEmptyValue>
            <mustBeWritable>0</mustBeWritable>
            <mustExist>1</mustExist>
            <width>30</width>
            <ruleList>
                <isFalse>
                    <value>${java_autodetected}</value>
                </isFalse>
            </ruleList>
        </fileParameter>
        <directoryParameter>
            <name>installdir</name>
            <description>Installer.Parameter.installdir.description</description>
            <explanation>Installer.Parameter.installdir.explanation</explanation>
            <value></value>
            <default>${platform_install_prefix}/${product_shortname}</default>
            <allowEmptyValue>0</allowEmptyValue>
            <cliOptionName>installDir</cliOptionName>
            <mustBeWritable>1</mustBeWritable>
            <mustExist>0</mustExist>
            <width>30</width>
            <postShowPageActionList>
                <setInstallerVariable>
                    <name>studiodir</name>
                    <value>${installdir}</value>
                </setInstallerVariable>
            </postShowPageActionList>
            <preShowPageActionList>
                <setInstallerVariable>
                    <name>studiodir</name>
                    <value>${userHome}/${product_shortname}</value>
                    <ruleList>
                        <compareText>
                            <logic>contains</logic>
                            <nocase>1</nocase>
                            <text>${platform_name}</text>
                            <value>osx</value>
                        </compareText>
                    </ruleList>
                </setInstallerVariable>
            </preShowPageActionList>
            <validationActionList>
                <if>
                    <explanation>is empty</explanation>
                    <actionList>
                        <throwError>
                            <text>the folder must be empty</text>
                        </throwError>
                    </actionList>
                    <conditionRuleList>
                        <fileTest>
                            <condition>is_not_empty</condition>
                            <path>${studiodir}</path>
                        </fileTest>
                    </conditionRuleList>
                </if>
            </validationActionList>
        </directoryParameter>
        <directoryParameter>
            <name>lrws</name>
            <title>Liferay Workspace</title>
            <description>Directory:</description>
            <explanation></explanation>
            <value></value>
            <default>${installdir}${platform_path_separator}liferay-workspace</default>
            <allowEmptyValue>0</allowEmptyValue>
            <ask>0</ask>
            <mustBeWritable>1</mustBeWritable>
            <mustExist>0</mustExist>
            <width>30</width>
        </directoryParameter>
        <booleanParameterGroup>
            <name>clitools</name>
            <description>Install Command Line Tools</description>
            <explanation>Install Command Line Tools such as blade and bnd.</explanation>
            <value></value>
            <default>1</default>
            <parameterList>
                <directoryParameter>
                    <name>userHome</name>
                    <description>Default User Home Directory:</description>
                    <explanation></explanation>
                    <value></value>
                    <default>${user_home_directory}</default>
                    <allowEmptyValue>0</allowEmptyValue>
                    <ask>0</ask>
                    <cliOptionName>userHome</cliOptionName>
                    <cliOptionText>Default User Home</cliOptionText>
                    <mustBeWritable>1</mustBeWritable>
                    <mustExist>1</mustExist>
                    <width>30</width>
                </directoryParameter>
                <labelParameter>
                    <name>initws</name>
                    <description></description>
                    <explanation>Init a Liferay Workspace</explanation>
                    <image></image>
                </labelParameter>
            </parameterList>
        </booleanParameterGroup>
        <choiceParameterGroup>
            <name>productkey</name>
            <title>Select a product to init a liferay workspace</title>
            <description></description>
            <explanation>When initializing a new liferay workpace, Liferay Customers can target to Liferay DXP. Community members should choose Liferay Portal Community Edition.</explanation>
            <value></value>
            <default></default>
            <parameterList>
                <labelParameter>
                    <name>dxp</name>
                    <description>Liferay DXP</description>
                    <explanation></explanation>
                    <image></image>
                </labelParameter>
                <labelParameter>
                    <name>ce</name>
                    <description>Liferay Portal Community Editon</description>
                    <explanation></explanation>
                    <image></image>
                </labelParameter>
            </parameterList>
            <ruleList>
                <isTrue>
                    <value>${clitools}</value>
                </isTrue>
            </ruleList>
        </choiceParameterGroup>
        <fileParameter>
            <name>activationKey</name>
            <title>DXP Activation Key (Optional)</title>
            <description>activation key file</description>
            <explanation>Please select the activation key file for Liferay DXP. If you skip this step, you can add the activation key into auto-deploy folder later.</explanation>
            <value></value>
            <default></default>
            <allowEmptyValue>1</allowEmptyValue>
            <mustBeWritable>0</mustBeWritable>
            <mustExist>1</mustExist>
            <width>30</width>
            <ruleList>
                <isTrue>
                    <value>${clitools}</value>
                </isTrue>
                <compareText>
                    <logic>equals</logic>
                    <text>${productkey}</text>
                    <value>dxp</value>
                </compareText>
            </ruleList>
        </fileParameter>
        <choiceParameterGroup>
            <name>bladeproxy</name>
            <description>Config proxy for JPM and Blade CLI</description>
            <explanation>If your workstation requires a proxy server, you must configure it for use by Blade by specifying it here.</explanation>
            <value></value>
            <default>skipbladeproxysetting</default>
            <parameterList>
                <labelParameter>
                    <name>skipbladeproxysetting</name>
                    <description>Skip proxy configuration</description>
                    <explanation></explanation>
                    <image></image>
                </labelParameter>
                <choiceParameter>
                    <name>bladeproxysetting</name>
                    <description>Configure proxy settings</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <displayType>combobox</displayType>
                    <ordering>default</ordering>
                    <width>30</width>
                    <optionList>
                        <option>
                            <description></description>
                            <image></image>
                            <text>HTTP Proxy</text>
                            <value>bladehttpProxy</value>
                        </option>
                        <option>
                            <description></description>
                            <image></image>
                            <text>HTTPS Proxy</text>
                            <value>bladehttpsProxy</value>
                        </option>
                        <option>
                            <description></description>
                            <image></image>
                            <text>SOCKS5 Proxy</text>
                            <value>bladesocksProxy</value>
                        </option>
                    </optionList>
                </choiceParameter>
            </parameterList>
            <ruleList>
                <isTrue>
                    <value>${clitools}</value>
                </isTrue>
            </ruleList>
        </choiceParameterGroup>
        <parameterGroup>
            <name>bladehttpproxyinfo</name>
            <title>HTTP Proxy Information</title>
            <explanation></explanation>
            <value></value>
            <default></default>
            <parameterList>
                <stringParameter>
                    <name>bladehttpproxyhost</name>
                    <description>Proxy Host</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>bladehttpproxyport</name>
                    <description>Proxy Port</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
            </parameterList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${bladeproxy}</text>
                    <value>bladeproxysetting</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${bladeproxysetting}</text>
                    <value>bladehttpProxy</value>
                </compareText>
            </ruleList>
        </parameterGroup>
        <parameterGroup>
            <name>bladehttpsproxyinfo</name>
            <title>HTTPS Proxy Information</title>
            <explanation></explanation>
            <value></value>
            <default></default>
            <parameterList>
                <stringParameter>
                    <name>bladehttpsproxyhost</name>
                    <description>Proxy Host</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>bladehttpsproxyport</name>
                    <description>Proxy Port</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
            </parameterList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${bladeproxy}</text>
                    <value>bladeproxysetting</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${bladeproxysetting}</text>
                    <value>bladehttpsProxy</value>
                </compareText>
            </ruleList>
        </parameterGroup>
        <parameterGroup>
            <name>bladesocksproxyinfo</name>
            <title>SOCKS5 Proxy Information</title>
            <explanation></explanation>
            <value></value>
            <default></default>
            <parameterList>
                <stringParameter>
                    <name>bladesocksproxyhost</name>
                    <description>Proxy Host</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>bladesocksproxyport</name>
                    <description>Proxy Port</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
            </parameterList>
            <ruleList>
                <compareText>
                    <logic>equals</logic>
                    <text>${bladeproxy}</text>
                    <value>bladeproxysetting</value>
                </compareText>
                <compareText>
                    <logic>equals</logic>
                    <text>${bladeproxysetting}</text>
                    <value>bladesocksProxy</value>
                </compareText>
            </ruleList>
        </parameterGroup>
        <choiceParameterGroup>
            <name>proxy</name>
            <description>Proxy Configuration</description>
            <explanation>To configure the proxy settings for Liferay workspace, select "Configure proxy settings" below.  These settings will be saved in ~/.gradle/gradle.properties.</explanation>
            <value></value>
            <default>skipproxysetting</default>
            <parameterList>
                <labelParameter>
                    <name>skipproxysetting</name>
                    <description>Skip proxy configuration</description>
                    <explanation></explanation>
                    <image></image>
                </labelParameter>
                <choiceParameter>
                    <name>proxysetting</name>
                    <description>Configure proxy settings</description>
                    <explanation></explanation>
                    <value></value>
                    <default>httpProxy</default>
                    <allowEmptyValue>0</allowEmptyValue>
                    <displayType>combobox</displayType>
                    <ordering>default</ordering>
                    <width>40</width>
                    <optionList>
                        <option>
                            <description></description>
                            <image></image>
                            <text>HTTP Proxy</text>
                            <value>httpProxy</value>
                        </option>
                        <option>
                            <description></description>
                            <image></image>
                            <text>HTTPS Proxy</text>
                            <value>httpsProxy</value>
                        </option>
                        <option>
                            <description></description>
                            <image></image>
                            <text>SOCKS5 Proxy</text>
                            <value>socksProxy</value>
                        </option>
                    </optionList>
                </choiceParameter>
            </parameterList>
        </choiceParameterGroup>
        <parameterGroup>
            <name>httpproxyinfo</name>
            <title>HTTP Proxy Information</title>
            <explanation></explanation>
            <value></value>
            <default></default>
            <parameterList>
                <stringParameter>
                    <name>httpproxyhost</name>
                    <description>Proxy Host</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>httpproxyport</name>
                    <description>Proxy Port</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>httpproxyusername</name>
                    <description>Proxy Username</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>httpproxypassword</name>
                    <description>Proxy Password</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
            </parameterList>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxysetting}</value1>
                            <value2>httpProxy</value2>
                        </compareValues>
                    </ruleList>
                </ruleGroup>
            </ruleList>
        </parameterGroup>
        <parameterGroup>
            <name>httppsroxyinfo</name>
            <title>HTTPS Proxy Information</title>
            <explanation></explanation>
            <value></value>
            <default></default>
            <parameterList>
                <stringParameter>
                    <name>httpsproxyhost</name>
                    <description>Proxy Host</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>httpsproxyport</name>
                    <description>Proxy Port</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>httpsproxyusername</name>
                    <description>Proxy Username</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>httpsproxypassword</name>
                    <description>Proxy Password</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
            </parameterList>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxysetting}</value1>
                            <value2>httpsProxy</value2>
                        </compareValues>
                    </ruleList>
                </ruleGroup>
            </ruleList>
        </parameterGroup>
        <parameterGroup>
            <name>socksroxyinfo</name>
            <title>SOCKS5 Proxy Information</title>
            <explanation></explanation>
            <value></value>
            <default></default>
            <parameterList>
                <stringParameter>
                    <name>socksproxyhost</name>
                    <description>Proxy Host</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
                <stringParameter>
                    <name>socksproxyport</name>
                    <description>Proxy Port</description>
                    <explanation></explanation>
                    <value></value>
                    <default></default>
                    <allowEmptyValue>1</allowEmptyValue>
                    <width>30</width>
                </stringParameter>
            </parameterList>
            <ruleList>
                <ruleGroup>
                    <ruleList>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxy}</value1>
                            <value2>proxysetting</value2>
                        </compareValues>
                        <compareValues>
                            <logic>equals</logic>
                            <value1>${proxysetting}</value1>
                            <value2>socksProxy</value2>
                        </compareValues>
                    </ruleList>
                </ruleGroup>
            </ruleList>
        </parameterGroup>
    </parameterList>
</project>

